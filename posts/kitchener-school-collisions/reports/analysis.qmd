---
title: "Kitchener School Collisions"
image: "../images/map_snapshot.JPG"
date: "2025-01-30"
categories: [Open Data, R, Policy]
warning: false
message: false
echo: false
---

## Collisions Within 250m of Kitchener Schools (Jan 2015-June 2022)

```{r}
#| label: load-packages-sources
here::i_am("posts/kitchener-school-collisions/reports/analysis.qmd")

library(gt)
library(here)

source(here("posts", "kitchener-school-collisions", "R", "helpers.R"))
```

```{r}
#| label: load-data

all_collisions <- read_csv(here("posts", "kitchener-school-collisions", "data", "collisions_with_proximity_to_schools.csv"))

collisions_near_schools <- read_csv(here("posts", "kitchener-school-collisions", "data", "schools_collision_summary.csv"))
```

```{r}
#| label: add-columns-to-collisions

all_collisions <- all_collisions |> 
  mutate(
    time_period = case_when(
      accident_hour < 6 ~ "12AM - 6AM",
      accident_hour < 12 ~ "6AM - 12PM",
      accident_hour < 18 ~ "12PM - 6PM",
      TRUE ~ "6PM - 12AM"
    )
  )

```

```{r}
#| label: days-by-type
#| include: false

all_days <- tibble(
  date = seq.Date(ymd("2015-01-01"), ymd("2022-07-31"), "days"),
  weekday = weekdays(date),
  month = month(date),
  on_school_day = if_else(
      !(month %in% c(7, 8)) & !(weekday %in% c("Saturday", "Sunday")),
      TRUE,
      FALSE
    ),
  during_covid_shutdown = case_when(
      between(date, ymd("2020-03-16"), ymd("2020-06-30")) ~ TRUE,
      between(date, ymd("2020-12-21"), ymd("2021-02-07")) ~ TRUE,
      between(date, ymd("2021-04-12"), ymd("2021-06-30")) ~ TRUE,
      TRUE ~ FALSE
    ),
    school_day_type = case_when(
      on_school_day & during_covid_shutdown ~ "Lockdown School Day",
      on_school_day & !during_covid_shutdown ~ "Regular School Day",
      TRUE ~ "Non-School Day"
    )
  ) |> 
  count(school_day_type, name = "num_days")

all_days
```

```{r}
#| label: filter-6AM-6PM-collisions-only

collisions_btw_6am_6pm <- collisions_near_schools |> 
  filter(grepl("6am", time_window))
```

```{r}
#| label: pdestrian-collisions-6am-6pm

collisions_btw_6am_6pm |> 
  group_by(school_name) |> 
  summarise(num_collisions =  sum(pedestrian_collisions), .groups = "drop") |> 
  filter(num_collisions > 0) |> 
  arrange(desc(num_collisions)) |> 
  gt(rowname_col = "school_name") |> 
  tab_header(
    title = md("**Schools With at Least One Pedestrian Collision Within 250M**")
    ) |> 
  cols_label(
    num_collisions = "# of Collisions") |> 
  grand_summary_rows(
    columns = everything(),
    fns = list(Total ~ sum(.))
  )  # Add summary row
```

```{r}
#| label: ped-by-year

school_collisions <- all_collisions |>
  filter(
    near_school,
    btw_6am_6pm,
    grepl("Reg", school_day_type)
  ) 

all_collisions |> 
  filter(
    pedestrianinvolved,
    grepl("Reg", school_day_type),
    btw_6am_6pm
    ) |> 
  mutate(
    accident_year = factor(accident_year, levels = c("2015", "2016", "2017", "2018", "2019", "2020", "2021", "2022")),
    school_proximity = if_else(near_school, "Within 250m of a school", "Beyond 250m from a school")
    ) |>
  ggplot(aes(x = accident_year, fill = school_proximity)) +
    geom_bar(stat = "count") +
    scale_fill_manual(values = c("Within 250m of a school" = "purple4", "Beyond 250m from a school" = "gray52")) +
    expand_limits(y = 25) +  # This adds padding up to y=25
    facet_wrap(vars(school_proximity), nrow = 2, drop = FALSE) +
    geom_text(
      stat = "count", 
      aes(label = after_stat(count)),
      vjust = -0.5
    ) +
    theme_bw() +
    theme(
      panel.grid = element_blank(),         # Removes gridlines
      axis.text.y = element_blank(),          # Removes axis values
      axis.title = element_blank(),         # Removes axis titles
      axis.line = element_blank(),          # Removes axis lines
      axis.ticks = element_blank(),
      panel.border = element_blank(),
      axis.text.x = element_text(face = "bold"),
      legend.position = "none"
    ) +
    labs(
      x = "",
      y = "",
      title = "Number of Pedestrian Collisions per Year",
      subtitle = "On a regular school day from 6am-6pm (2022 data to June 30 only)"
    )
```

```{r}
#| label: traffic-control

school_collisions |> 
  filter(pedestrianinvolved) |> 
  ggplot(aes(y = fct_rev(fct_infreq(trafficcontrol)))) +
    geom_bar(fill = "purple4") +
    scale_x_continuous(breaks = function(x) seq(0, ceiling(x[2]), by = 2)) +
    geom_text(
        stat = "count", 
        aes(label = after_stat(count)),
        position = position_dodge(width = 0.9),
        hjust = 1.5,
        colour = "white"
    ) +
    theme_bw() +
    theme(
      panel.grid = element_blank(),         # Removes gridlines
      axis.text.x = element_blank(),          # Removes axis values
      axis.title = element_blank(),         # Removes axis titles
      axis.line = element_blank(),          # Removes axis lines
      axis.ticks = element_blank(),
      panel.border = element_blank(),
      axis.text.y = element_text(face = "bold")
    ) +
    labs(
      x = "",
      y = "",
      title = "Number of Pedestrian Collisions by Traffic Control Type",
      subtitle = "Within 250m of a school on a regular school day from 6am-6pm (2022 data to June 30 only)"
    )
```

```{r}
#| label: collisions-6am-6pm

collisions_btw_6am_6pm |> 
  group_by(school_name) |> 
  summarise(across(ends_with("_collisions"), sum), .groups = "drop") |> 
  filter(total_collisions > 0) |> 
  arrange(desc(total_collisions)) |> 
  gt(rowname_col = "school_name") |> 
  tab_header(
    title = md("**Schools With at Least One Collision of Any Kind Within 250M**"),
    subtitle = "Collisions Involving Pedestrians or Cyclists Broken Out"
    ) |> 
  cols_label(
    pedestrian_collisions = "Pedestrians",
    cyclist_collisions = "Cyclists",
    other_collisions = "Other",
    total_collisions = "Total"
  ) |> 
  grand_summary_rows(
    columns = everything(),
    fns = list(Total ~ sum(.))
  )  # Add summary row

```

```{r}
#| label: by-day-type

coll_by_day_type <- all_collisions |>
  filter(near_school) |> 
  group_by(school_day_type, time_period) |> 
  summarise(across(ends_with("involved"), sum), .groups = "drop") |>
  mutate(
    total_collisions = pedestrianinvolved + cyclistinvolved + no_ped_cyc_involved,
    pedestrian_perc = pedestrianinvolved / total_collisions,
    cyclist_perc = cyclistinvolved / total_collisions,
    other_perc = no_ped_cyc_involved / total_collisions
    )

coll_by_day_type |> 
  group_by(time_period) |>  
  gt(rowname_col = "school_day_type") |> 
  tab_header(
    title = md("**Collisions by Time Period and Type of Day**")) |> 
  cols_label(
    pedestrianinvolved = "Pedestrians",
    cyclistinvolved = "Cyclists",
    no_ped_cyc_involved = "Other",
    total_collisions = "Total",
    pedestrian_perc = "Pedestrians",
    cyclist_perc = "Cyclists",
    other_perc = "Other"
  )|> 
  fmt_percent(columns = ends_with("perc"), decimals = 1) |> 
  tab_spanner(
    label = md("**# of collisions**"),
    columns = 3:6
  ) %>%
  tab_spanner(
    label = md("**% of collisions**"), 
    columns = 7:9
  ) |> 
  row_group_order(
    groups = c("12AM - 6AM", "6AM - 12PM", "12PM - 6PM", "6PM - 12AM")
    ) |> 
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_row_groups()  # Applies to all row groups
  )

```

```{r}
#| label: colls-per-day

coll_by_day_type |> 
  left_join(all_days) |> 
  mutate(across(3:6, ~ .x / num_days)) |> 
  select(-(7:10)) |> 
  group_by(time_period) |> 
  gt(rowname_col = "school_day_type") |> 
  tab_header(
    title = md("**Collisions per Day**")) |> 
  cols_label(
    pedestrianinvolved = "Pedestrians",
    cyclistinvolved = "Cyclists",
    no_ped_cyc_involved = "Other",
    total_collisions = "Total"
  ) |> 
  fmt_number(columns = everything(), decimals = 3) |> 
  row_group_order(
    groups = c("12AM - 6AM", "6AM - 12PM", "12PM - 6PM", "6PM - 12AM")
    ) |> 
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_row_groups()  # Applies to all row groups
  )

```

```{r}
#| label: by-nearness-to-school

coll_by_nearness <- all_collisions |>
  filter(school_day_type == "Regular School Day") |> 
  mutate(
    near_school = if_else(
      near_school, 
      "Within 250M of School", 
      "Beyond 250M from School"
      )
    ) |> 
  group_by(near_school, time_period) |> 
  summarise(across(ends_with("involved"), sum), .groups = "drop") |>
  mutate(
    total_collisions = pedestrianinvolved + cyclistinvolved + no_ped_cyc_involved,
    pedestrian_perc = pedestrianinvolved / total_collisions,
    cyclist_perc = cyclistinvolved / total_collisions,
    other_perc = no_ped_cyc_involved / total_collisions
    )

coll_by_nearness |> 
  group_by(near_school) |> 
  arrange(factor(time_period, levels = c("12AM - 6AM", "6AM - 12PM", "12PM - 6PM", "6PM - 12AM"))) |> 
  gt(rowname_col = "time_period") |> 
  tab_header(
    title = md("**Collisions by School Proximity and Time Period**")) |> 
  cols_label(
    pedestrianinvolved = "Pedestrians",
    cyclistinvolved = "Cyclists",
    no_ped_cyc_involved = "Other",
    total_collisions = "Total",
    pedestrian_perc = "Pedestrians",
    cyclist_perc = "Cyclists",
    other_perc = "Other"
  )|> 
  fmt_percent(columns = ends_with("perc"), decimals = 1) |> 
  tab_spanner(
    label = md("**# of collisions**"),
    columns = 3:6
  ) %>%
  tab_spanner(
    label = md("**% of collisions**"), 
    columns = 7:9
  ) |> 
  row_group_order(
    groups = c("Within 250M of School", "Beyond 250M from School")
    ) |> 
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_row_groups()  # Applies to all row groups
  )
```

```{r}
#| label: colls-per-day-by-proximity

num_reg_days <- all_days |> 
  filter(school_day_type == "Regular School Day") |> 
  pull(num_days)

coll_by_nearness |> 
  mutate(across(3:6, ~ .x / num_reg_days)) |> 
  select(-(7:9)) |> 
  group_by(near_school) |> 
  arrange(factor(time_period, levels = c("12AM - 6AM", "6AM - 12PM", "12PM - 6PM", "6PM - 12AM"))) |>
  gt(rowname_col = "time_period") |> 
  tab_header(
    title = md("**Collisions per Day**")) |> 
  cols_label(
    pedestrianinvolved = "Pedestrians",
    cyclistinvolved = "Cyclists",
    no_ped_cyc_involved = "Other",
    total_collisions = "Total"
  ) |> 
  fmt_number(columns = everything(), decimals = 2) |> 
  row_group_order(
    groups = c("Within 250M of School", "Beyond 250M from School")
    ) |> 
  tab_style(
    style = cell_text(weight = "bold"),
    locations = cells_row_groups()  # Applies to all row groups
  )
```

```{r}
#| label: ped-by-year-all-days

all_collisions |> 
  filter(pedestrianinvolved) |> 
  mutate(accident_year = as.character(accident_year)) |> 
  ggplot(aes(x = accident_year)) +
    geom_bar(stat = "count", fill = "purple4") +
    geom_text(
      stat = "count", 
      aes(label = after_stat(count)),
      position = position_dodge(width = 0.9),
      vjust = 1.5,
      colour = "white"
    ) +
    theme_bw() +
    theme(
      panel.grid = element_blank(),         # Removes gridlines
      axis.text.y = element_blank(),          # Removes axis values
      axis.title = element_blank(),         # Removes axis titles
      axis.line = element_blank(),          # Removes axis lines
      axis.ticks = element_blank(),
      panel.border = element_blank(),
      axis.text.x = element_text(face = "bold")
    ) +
    labs(
      x = "", 
      y = "", 
      title = "Number of Pedestrian Collisions per Year",
      subtitle = "All days, locations, and time periods (2022 data to July 31 only)"
      )

```

```{r}
#| label: traffic-control-all-ped-collisions

all_collisions |> 
  filter(pedestrianinvolved) |> 
  ggplot(aes(y = fct_rev(fct_infreq(trafficcontrol)))) +
    geom_bar(fill = "purple4") +
    scale_x_continuous(breaks = function(x) seq(0, ceiling(x[2]), by = 10)) +
    geom_text(stat = "count", 
              aes(label = after_stat(count)),
              position = position_dodge(width = 0.9),
              hjust = -0.5) +
    theme_bw() +
    theme(
      panel.grid = element_blank(),         # Removes gridlines
      axis.text.x = element_blank(),          # Removes axis values
      axis.title = element_blank(),         # Removes axis titles
      axis.line = element_blank(),          # Removes axis lines
      axis.ticks = element_blank(),
      panel.border = element_blank(),
      axis.text.y = element_text(face = "bold")
    ) +
    labs(
      x = "",
      y = "",
      title = "Number of Pedestrian Collisions by Traffic Control Type",
      subtitle = "2022 data to July 31 only"
    )
```

The interactive map below reports the types and number of collisions that took place on a school day between 6AM and 6PM within 250m of schools in Kitchener. Hover over a bubble to see the school name and click on it to see collision details. A bubble with a number indicates multiple underlying schools. Click on it to zoom in and see bubbles for the individual schools.

```{r}
#| label: map-collisions

map <- collisions_btw_6am_6pm |> 
  filter(grepl("Reg", school_day_type)) |> 
  create_school_collision_map()

map
```
